<?php

namespace Tests;

use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;
use Illuminate\Contracts\Debug\ExceptionHandler;
use App\Exceptions\Handler;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;
    use DatabaseMigrations;

    protected $thread;
    protected $user;
    protected $reply;
    protected $channel;
    protected $oldExceptionHandler;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->disableExceptionHandling();
        $this->channel = factory('App\Channel')->create();
        $this->thread = factory('App\Thread')->create(['channel_id' => $this->channel]);
        $this->reply = factory('App\Reply')->create();
        $this->user = factory('App\User')->create();
    }

    protected function signIn($user = null)
    {
        $user = $user ?: create('App\User');

        $this->actingAs($user);

        return $this;
    }

    protected function disableExceptionHandling()
    {
        $this->oldExceptionHandler = $this->app->make(ExceptionHandler::class);

        $this->app->instance(ExceptionHandler::class,new class extends Handler{
            public function __construct(){}
            public function report(\Exception $e){}
            public function render($request,\Exception $e){
                throw $e;
            }
        });
    }

    protected function withExceptionHandling()
    {
        $this->app->instance(ExceptionHandler::class,$this->oldExceptionHandler);

        return $this;
    }
}
